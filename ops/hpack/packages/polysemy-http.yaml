name: polysemy-http
version: 0.3.1.0
synopsis: Polysemy effect for http-client
github: tek/polysemy-http
description: Please see the README on Github at <https://github.com/tek/polysemy-http>
license: BSD-2-Clause-Patent
license-file: LICENSE
author: "Torsten Schmits"
maintainer: "tek@tryp.io"
copyright: "2020 Torsten Schmits"
category: Network
build-type: Simple

extra-source-files:
  - README.md
  - Changelog.md

library:
  source-dirs: lib
  other-modules:
    - Prelude
  generated-exposed-modules:
    - Paths_polysemy_http

dependencies:
  - aeson >= 1.4.4.0
  - ansi-terminal >= 0.9.1
  - name: base
    version: ">= 4 && < 5"
    mixin:
      - hiding (Prelude)
  - bytestring
  - case-insensitive >= 1.2
  - co-log-core >= 0.2.1
  - co-log-polysemy >= 0.0.1
  - composition >= 1.0.2
  - containers
  - data-default >= 0.7.1
  - either >= 5.0.1
  - http-client >= 0.6.4
  - http-client-tls >= 0.3.5
  - http-types >= 0.12.3
  - lens >= 4
  - polysemy >= 1.3.0
  - polysemy-plugin ^>= 0.2.5.1
  - relude >= 0.5 && < 0.8
  - string-interpolate >= 0.2.1
  - template-haskell >= 2.14.0
  - text >= 1.2.3
  - time

ghc-options:
  - -fplugin=Polysemy.Plugin
  - -flate-specialise
  - -fspecialise-aggressively
  - -Wall
  - -O2

tests:
  polysemy-http-unit:
    main: Main.hs
    source-dirs: test
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - hedgehog
      - name: polysemy-http
        mixin:
          - hiding (Prelude)
          - (Polysemy.Http.Prelude as Prelude)
      - tasty
      - tasty-hedgehog
  polysemy-http-integration:
    main: Main.hs
    source-dirs: integration
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - hedgehog
      - network
      - name: polysemy-http
        mixin:
          - hiding (Prelude)
          - (Polysemy.Http.Prelude as Prelude)
      - servant
      - servant-server
      - servant-client
      - tasty
      - tasty-hedgehog
      - warp

default-extensions:
  - AllowAmbiguousTypes
  - ApplicativeDo
  - BangPatterns
  - BinaryLiterals
  - BlockArguments
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingVia
  - DoAndIfThenElse
  - EmptyDataDecls
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedStrings
  - PackageImports
  - PartialTypeSignatures
  - PatternGuards
  - PatternSynonyms
  - PolyKinds
  - QuantifiedConstraints
  - QuasiQuotes
  - RankNTypes
  - RecordWildCards
  - RecursiveDo
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - TypeSynonymInstances
  - UndecidableInstances
  - UnicodeSyntax
  - ViewPatterns
